import type { PreviousUpload, UrlStorage } from '../options.js';
export declare const canStoreURLs = true;
export declare class FileUrlStorage implements UrlStorage {
    path: string;
    constructor(filePath: string);
    findAllUploads(): Promise<PreviousUpload[]>;
    findUploadsByFingerprint(fingerprint: any): Promise<PreviousUpload[]>;
    removeUpload(urlStorageKey: any): Promise<void>;
    addUpload(fingerprint: any, upload: any): Promise<string>;
    _setItem(key: any, value: any, cb: any): void;
    _getItems(prefix: any, cb: any): void;
    _removeItem(key: any, cb: any): void;
    _lockfileOptions(): {
        realpath: boolean;
        retries: {
            retries: number;
            minTimeout: number;
        };
    };
    _releaseAndCb(release: any, cb: any): (err: any) => void;
    _writeData(data: any, cb: any): void;
    _getData(cb: any): void;
}
