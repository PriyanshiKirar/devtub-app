/// <reference types="node" />
import * as http from 'node:http';
import type { HttpProgressHandler, HttpRequest, HttpResponse, HttpStack } from '../options.js';
import type { FileSliceTypes } from './index.js';
export default class NodeHttpStack implements HttpStack {
    private _requestOptions;
    constructor(requestOptions?: http.RequestOptions);
    createRequest(method: string, url: string): Request;
    getName(): string;
}
declare class Request implements HttpRequest {
    _method: string;
    _url: string;
    _headers: Record<string, string>;
    _request: http.ClientRequest | null;
    _progressHandler: HttpProgressHandler;
    _requestOptions: http.RequestOptions;
    constructor(method: string, url: string, options: http.RequestOptions);
    getMethod(): string;
    getURL(): string;
    setHeader(header: string, value: string): void;
    getHeader(header: string): string;
    setProgressHandler(progressHandler: HttpProgressHandler): void;
    send(body?: FileSliceTypes): Promise<HttpResponse>;
    abort(): Promise<void>;
    getUnderlyingObject(): http.ClientRequest | null;
}
export {};
